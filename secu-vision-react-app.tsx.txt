import { useState, useEffect } from "react";
import { Bell, Home, Settings, User, Camera, LogOut, Info, ChevronRight, ChevronLeft, Eye, EyeOff, AlertTriangle } from "lucide-react";

// Main App component
export default function App() {
  const [currentScreen, setCurrentScreen] = useState("interface");
  const [showPassword, setShowPassword] = useState(false);
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [confirmPassword, setConfirmPassword] = useState("");
  const [name, setName] = useState("");
  const [alerts, setAlerts] = useState([
    { id: 1, date: "10/20/25", time: "10:17 a.m", type: "Motion", location: "Front Door" },
    { id: 2, date: "10/19/25", time: "08:05 a.m", type: "Motion", location: "Front Door" },
    { id: 3, date: "10/19/25", time: "05:30 p.m", type: "Motion", location: "Backyard" }
  ]);
  
  // Simulate splash screen on initial load
  useEffect(() => {
    const timer = setTimeout(() => {
      setCurrentScreen("login");
    }, 2000);
    
    return () => clearTimeout(timer);
  }, []);
  
  // Screen renderer
  const renderScreen = () => {
    switch(currentScreen) {
      case "interface":
        return <InterfaceScreen setCurrentScreen={setCurrentScreen} />;
      case "login":
        return <LoginScreen 
          setCurrentScreen={setCurrentScreen} 
          email={email}
          setEmail={setEmail}
          password={password}
          setPassword={setPassword}
          showPassword={showPassword}
          setShowPassword={setShowPassword}
        />;
      case "signup":
        return <SignUpScreen 
          setCurrentScreen={setCurrentScreen} 
          name={name}
          setName={setName}
          email={email}
          setEmail={setEmail}
          password={password}
          setPassword={setPassword}
          confirmPassword={confirmPassword}
          setConfirmPassword={setConfirmPassword}
          showPassword={showPassword}
          setShowPassword={setShowPassword}
        />;
      case "dashboard":
        return <DashboardScreen setCurrentScreen={setCurrentScreen} />;
      case "home":
        return <HomeScreen setCurrentScreen={setCurrentScreen} alerts={alerts} />;
      case "alertDetails":
        return <AlertDetailsScreen setCurrentScreen={setCurrentScreen} />;
      case "alertNotification":
        return <AlertNotificationScreen setCurrentScreen={setCurrentScreen} />;
      case "profile":
        return <ProfileScreen setCurrentScreen={setCurrentScreen} />;
      case "settings":
        return <SettingsScreen setCurrentScreen={setCurrentScreen} />;
      case "changePassword":
        return <ChangePasswordScreen 
          setCurrentScreen={setCurrentScreen}
          password={password}
          setPassword={setPassword}
          confirmPassword={confirmPassword}
          setConfirmPassword={setConfirmPassword}
        />;
      case "changeEmail":
        return <ChangeEmailScreen 
          setCurrentScreen={setCurrentScreen}
          email={email}
          setEmail={setEmail}
        />;
      case "appInfo":
        return <AppInfoScreen setCurrentScreen={setCurrentScreen} />;
      default:
        return <InterfaceScreen setCurrentScreen={setCurrentScreen} />;
    }
  };
  
  return (
    <div className="min-h-screen bg-black text-white">
      {renderScreen()}
    </div>
  );
}

// Interface/Splash Screen
function InterfaceScreen({ setCurrentScreen }) {
  return (
    <div className="min-h-screen bg-black flex flex-col items-center justify-between p-8">
      <div className="h-16"></div>
      <div className="flex flex-col items-center justify-center">
        <div className="w-32 h-32 mb-2">
          <Logo />
        </div>
        <h1 className="text-xl text-center font-bold text-white">SECURE VISION</h1>
        <p className="text-xs text-gray-400 text-center mt-1">AI-Powered Security System for Excellence</p>
      </div>
      <div className="w-full max-w-xs">
        <button 
          onClick={() => setCurrentScreen("login")} 
          className="w-full py-2 bg-cyan-500 text-white rounded-md"
        >
          Get Started
        </button>
      </div>
    </div>
  );
}

// Login Screen
function LoginScreen({ setCurrentScreen, email, setEmail, password, setPassword, showPassword, setShowPassword }) {
  return (
    <div className="min-h-screen bg-black flex flex-col items-center justify-between p-8">
      <div className="h-16"></div>
      <div className="flex flex-col items-center justify-center w-full">
        <div className="w-32 h-32 mb-2">
          <Logo />
        </div>
        <h1 className="text-xl text-center font-bold text-white">SECURE VISION</h1>
        
        <div className="w-full max-w-xs mt-8">
          <input
            type="email"
            placeholder="Email or Username"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            className="w-full p-2 mb-4 bg-gray-800 border border-gray-700 rounded-md focus:outline-none focus:border-cyan-500"
          />
          
          <div className="relative">
            <input
              type={showPassword ? "text" : "password"}
              placeholder="Password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              className="w-full p-2 mb-1 bg-gray-800 border border-gray-700 rounded-md focus:outline-none focus:border-cyan-500"
            />
            <button 
              onClick={() => setShowPassword(!showPassword)}
              className="absolute right-2 top-2.5 text-gray-400"
            >
              {showPassword ? <EyeOff size={18} /> : <Eye size={18} />}
            </button>
          </div>
          
          <div className="flex justify-end mb-4">
            <button className="text-xs text-cyan-500">Forgot Password?</button>
          </div>
          
          <button 
            onClick={() => setCurrentScreen("dashboard")} 
            className="w-full py-2 bg-cyan-500 text-white rounded-md mb-4"
          >
            Login
          </button>
          
          <div className="text-center text-xs text-gray-400">
            <span>Don't have an account? </span>
            <button 
              onClick={() => setCurrentScreen("signup")} 
              className="text-cyan-500"
            >
              SignUp
            </button>
          </div>
        </div>
      </div>
      <div className="h-16"></div>
    </div>
  );
}

// SignUp Screen
function SignUpScreen({ setCurrentScreen, name, setName, email, setEmail, password, setPassword, confirmPassword, setConfirmPassword, showPassword, setShowPassword }) {
  return (
    <div className="min-h-screen bg-black flex flex-col items-center justify-between p-8">
      <div className="h-16"></div>
      <div className="flex flex-col items-center justify-center w-full">
        <div className="w-32 h-32 mb-2">
          <Logo />
        </div>
        <h1 className="text-xl text-center font-bold text-white">SECURE VISION</h1>
        
        <div className="w-full max-w-xs mt-8">
          <input
            type="text"
            placeholder="Full Name"
            value={name}
            onChange={(e) => setName(e.target.value)}
            className="w-full p-2 mb-4 bg-gray-800 border border-gray-700 rounded-md focus:outline-none focus:border-cyan-500"
          />
          
          <input
            type="email"
            placeholder="Email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            className="w-full p-2 mb-4 bg-gray-800 border border-gray-700 rounded-md focus:outline-none focus:border-cyan-500"
          />
          
          <div className="relative mb-4">
            <input
              type={showPassword ? "text" : "password"}
              placeholder="Password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              className="w-full p-2 bg-gray-800 border border-gray-700 rounded-md focus:outline-none focus:border-cyan-500"
            />
            <button 
              onClick={() => setShowPassword(!showPassword)}
              className="absolute right-2 top-2.5 text-gray-400"
            >
              {showPassword ? <EyeOff size={18} /> : <Eye size={18} />}
            </button>
          </div>
          
          <div className="relative">
            <input
              type={showPassword ? "text" : "password"}
              placeholder="Confirm Password"
              value={confirmPassword}
              onChange={(e) => setConfirmPassword(e.target.value)}
              className="w-full p-2 mb-4 bg-gray-800 border border-gray-700 rounded-md focus:outline-none focus:border-cyan-500"
            />
            <button 
              onClick={() => setShowPassword(!showPassword)}
              className="absolute right-2 top-2.5 text-gray-400"
            >
              {showPassword ? <EyeOff size={18} /> : <Eye size={18} />}
            </button>
          </div>
          
          <button 
            onClick={() => setCurrentScreen("dashboard")} 
            className="w-full py-2 bg-cyan-500 text-white rounded-md mb-4"
          >
            Sign Up
          </button>
          
          <div className="text-center text-xs text-gray-400">
            <span>Already have an account? </span>
            <button 
              onClick={() => setCurrentScreen("login")} 
              className="text-cyan-500"
            >
              Login
            </button>
          </div>
        </div>
      </div>
      <div className="h-16"></div>
    </div>
  );
}

// Dashboard Screen
function DashboardScreen({ setCurrentScreen }) {
  return (
    <div className="min-h-screen bg-black flex flex-col items-center p-8">
      <div className="w-full flex justify-center mb-8">
        <div className="w-28 h-28">
          <Logo />
        </div>
      </div>
      
      <div className="grid grid-cols-2 gap-4 w-full max-w-xs">
        <MenuTile 
          icon={<Home size={32} className="text-cyan-500" />} 
          title="Home" 
          onClick={() => setCurrentScreen("home")}
        />
        <MenuTile 
          icon={<Bell size={32} className="text-cyan-500" />} 
          title="Alert Details" 
          onClick={() => setCurrentScreen("alertDetails")}
        />
        <MenuTile 
          icon={<Settings size={32} className="text-cyan-500" />} 
          title="Settings" 
          onClick={() => setCurrentScreen("settings")}
        />
        <MenuTile 
          icon={<User size={32} className="text-cyan-500" />} 
          title="Profile" 
          onClick={() => setCurrentScreen("profile")}
        />
      </div>
      
      <BottomNavigation setCurrentScreen={setCurrentScreen} currentScreen="dashboard" />
    </div>
  );
}

// Home Screen
function HomeScreen({ setCurrentScreen, alerts }) {
  return (
    <div className="min-h-screen bg-black flex flex-col">
      <div className="p-4 flex items-center justify-between border-b border-gray-800">
        <h1 className="text-lg font-bold">Live Camera</h1>
      </div>
      
      <div className="flex-1 relative">
        <div className="w-full h-48 bg-gray-700 relative">
          <img src="/api/placeholder/400/200" alt="Live Feed" className="w-full h-full object-cover" />
          <div className="absolute bottom-2 left-2 bg-black bg-opacity-70 p-1 rounded text-xs">
            Camera 1
          </div>
        </div>
        
        <div className="p-4">
          <h2 className="font-bold mb-1">Recent Alerts</h2>
          <div className="space-y-2">
            {alerts.map(alert => (
              <div 
                key={alert.id} 
                className="bg-gray-800 p-3 rounded-md flex items-center justify-between"
                onClick={() => setCurrentScreen("alertDetails")}
              >
                <div className="flex items-center space-x-2">
                  <AlertTriangle className="text-yellow-400" size={18} />
                  <div>
                    <div className="text-sm">{alert.date}</div>
                    <div className="text-xs text-gray-400">{alert.time}</div>
                  </div>
                </div>
                <div className="text-xs text-right">
                  <div>{alert.type}</div>  
                  <div className="text-gray-400">{alert.location}</div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
      
      <BottomNavigation setCurrentScreen={setCurrentScreen} currentScreen="home" />
    </div>
  );
}

// Alert Details Screen
function AlertDetailsScreen({ setCurrentScreen }) {
  return (
    <div className="min-h-screen bg-black flex flex-col">
      <div className="p-4 flex items-center justify-between border-b border-gray-800">
        <h1 className="text-lg font-bold">Alert Details</h1>
        <button onClick={() => setCurrentScreen("home")} className="text-cyan-500">
          <ChevronLeft size={24} />
        </button>
      </div>
      
      <div className="flex-1 p-4">
        <div className="flex justify-center mb-6">
          <div className="w-16 h-16 bg-red-600 rounded-full flex items-center justify-center">
            <AlertTriangle size={40} />
          </div>
        </div>
        
        <div className="space-y-4">
          <div>
            <label className="text-xs text-gray-400">Date</label>
            <p>Oct 10, 2025, 2:30 p.m</p>
          </div>
          
          <div>
            <label className="text-xs text-gray-400">Camera</label>
            <p>Camera 1</p>
          </div>
          
          <div>
            <label className="text-xs text-gray-400">Description</label>
            <p>Detected at the front door</p>
          </div>
          
          <div className="w-full">
            <img src="/api/placeholder/400/200" alt="Alert Image" className="w-full h-48 object-cover rounded-md" />
          </div>
          
          <button className="w-full py-2 bg-gray-700 text-white rounded-md">
            View Details
          </button>
        </div>
      </div>
      
      <BottomNavigation setCurrentScreen={setCurrentScreen} currentScreen="alertDetails" />
    </div>
  );
}

// Alert Notification Screen
function AlertNotificationScreen({ setCurrentScreen }) {
  return (
    <div className="min-h-screen bg-black flex flex-col">
      <div className="p-4 flex items-center justify-between border-b border-gray-800">
        <h1 className="text-lg font-bold">Alert</h1>
        <button onClick={() => setCurrentScreen("home")} className="text-cyan-500">
          <ChevronLeft size={24} />
        </button>
      </div>
      
      <div className="flex-1 p-4">
        <div className="flex justify-center mb-6">
          <div className="w-16 h-16 bg-yellow-500 rounded-full flex items-center justify-center">
            <AlertTriangle size={40} />
          </div>
        </div>
        
        <div className="space-y-4">
          <div>
            <p className="text-center font-bold text-lg">Motion Detected at Front Door</p>
          </div>
          
          <button className="w-full py-2 bg-gray-700 text-white rounded-md">
            View Details
          </button>
        </div>
      </div>
      
      <BottomNavigation setCurrentScreen={setCurrentScreen} currentScreen="" />
    </div>
  );
}

// Phone icon component (missing from imports)
function Phone({ size = 24, className = "" }) {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg" 
      width={size} 
      height={size} 
      viewBox="0 0 24 24" 
      fill="none" 
      stroke="currentColor" 
      strokeWidth="2" 
      strokeLinecap="round" 
      strokeLinejoin="round" 
      className={className}
    >
      <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>
    </svg>
  );
}

// Profile Screen
function ProfileScreen({ setCurrentScreen }) {
  return (
    <div className="min-h-screen bg-black flex flex-col">
      <div className="p-4 flex items-center justify-between border-b border-gray-800">
        <h1 className="text-lg font-bold">Profile</h1>
      </div>
      
      <div className="flex-1 p-4">
        <div className="flex justify-center mb-6">
          <div className="w-24 h-24 bg-gray-700 rounded-full flex items-center justify-center">
            <User size={40} className="text-gray-400" />
          </div>
        </div>
        
        <div className="text-center mb-6">
          <h2 className="text-xl font-bold">Jhon Doe</h2>
          <div className="flex justify-center items-center mt-2">
            <Phone size={14} className="mr-1" />
            <p className="text-sm">+1 (777) 555-6666</p>
          </div>
          <div className="flex justify-center items-center mt-1">
            <Home size={14} className="mr-1" />
            <p className="text-sm">123 Maple Road, Rivertown</p>
          </div>
        </div>
        
        <div className="space-y-4">
          <button 
            onClick={() => setCurrentScreen("changePassword")} 
            className="w-full py-2 bg-gray-800 text-white rounded-md flex justify-between items-center px-4"
          >
            <span>Change Password</span>
            <ChevronRight size={20} />
          </button>
          
          <button 
            onClick={() => setCurrentScreen("changeEmail")} 
            className="w-full py-2 bg-gray-800 text-white rounded-md flex justify-between items-center px-4"
          >
            <span>Change Email</span>
            <ChevronRight size={20} />
          </button>
          
          <button 
            onClick={() => setCurrentScreen("appInfo")} 
            className="w-full py-2 bg-gray-800 text-white rounded-md flex justify-between items-center px-4"
          >
            <span>App Info</span>
            <ChevronRight size={20} />
          </button>
          
          <button 
            onClick={() => setCurrentScreen("login")} 
            className="w-full py-2 bg-red-600 text-white rounded-md mt-8"
          >
            Logout
          </button>
        </div>
      </div>
      
      <BottomNavigation setCurrentScreen={setCurrentScreen} currentScreen="profile" />
    </div>
  );
}

// Settings Screen
function SettingsScreen({ setCurrentScreen }) {
  return (
    <div className="min-h-screen bg-black flex flex-col">
      <div className="p-4 flex items-center justify-between border-b border-gray-800">
        <h1 className="text-lg font-bold">Settings</h1>
      </div>
      
      <div className="flex-1 p-4">
        <div className="space-y-4">
          <div className="bg-gray-800 p-4 rounded-md">
            <h2 className="text-sm font-bold mb-4">Account Settings</h2>
            
            <div className="flex justify-between items-center mb-3">
              <span>Manage Profile</span>
              <ChevronRight size={20} className="text-gray-400" />
            </div>
            
            <div className="flex justify-between items-center">
              <span>App preferences</span>
              <div className="w-10 h-5 bg-cyan-500 rounded-full relative">
                <div className="w-4 h-4 bg-white rounded-full absolute right-0.5 top-0.5"></div>
              </div>
            </div>
          </div>
          
          <div className="bg-gray-800 p-4 rounded-md">
            <h2 className="text-sm font-bold mb-4">Notification settings</h2>
            
            <div className="flex justify-between items-center mb-3">
              <span>Push notifications</span>
              <div className="w-10 h-5 bg-cyan-500 rounded-full relative">
                <div className="w-4 h-4 bg-white rounded-full absolute right-0.5 top-0.5"></div>
              </div>
            </div>
          </div>
          
          <div className="bg-gray-800 p-4 rounded-md">
            <h2 className="text-sm font-bold mb-4">Security Settings</h2>
            
            <div className="flex justify-between items-center">
              <span>Two-factor authentication</span>
              <div className="w-10 h-5 bg-gray-600 rounded-full relative">
                <div className="w-4 h-4 bg-white rounded-full absolute left-0.5 top-0.5"></div>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <BottomNavigation setCurrentScreen={setCurrentScreen} currentScreen="settings" />
    </div>
  );
}

// Change Password Screen
function ChangePasswordScreen({ setCurrentScreen, password, setPassword, confirmPassword, setConfirmPassword }) {
  return (
    <div className="min-h-screen bg-black flex flex-col">
      <div className="p-4 flex items-center justify-between border-b border-gray-800">
        <button onClick={() => setCurrentScreen("profile")} className="text-cyan-500">
          <ChevronLeft size={24} />
        </button>
        <h1 className="text-lg font-bold">Change Password</h1>
        <div className="w-6"></div>
      </div>
      
      <div className="flex-1 p-4">
        <div className="w-32 h-32 mx-auto mb-4">
          <Logo />
        </div>
        
        <div className="space-y-4">
          <input
            type="password"
            placeholder="New Password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            className="w-full p-3 bg-gray-800 border border-gray-700 rounded-md focus:outline-none focus:border-cyan-500"
          />
          
          <input
            type="password"
            placeholder="Confirm Password"
            value={confirmPassword}
            onChange={(e) => setConfirmPassword(e.target.value)}
            className="w-full p-3 bg-gray-800 border border-gray-700 rounded-md focus:outline-none focus:border-cyan-500"
          />
          
          <button 
            onClick={() => setCurrentScreen("profile")} 
            className="w-full py-2 bg-cyan-500 text-white rounded-md mt-4"
          >
            Save Changes
          </button>
        </div>
      </div>
      
      <BottomNavigation setCurrentScreen={setCurrentScreen} currentScreen="" />
    </div>
  );
}

// Change Email Screen
function ChangeEmailScreen({ setCurrentScreen, email, setEmail }) {
  return (
    <div className="min-h-screen bg-black flex flex-col">
      <div className="p-4 flex items-center justify-between border-b border-gray-800">
        <button onClick={() => setCurrentScreen("profile")} className="text-cyan-500">
          <ChevronLeft size={24} />
        </button>
        <h1 className="text-lg font-bold">Change Email</h1>
        <div className="w-6"></div>
      </div>
      
      <div className="flex-1 p-4">
        <div className="w-32 h-32 mx-auto mb-4">
          <Logo />
        </div>
        
        <div className="space-y-4">
          <input
            type="email"
            placeholder="New Email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            className="w-full p-3 bg-gray-800 border border-gray-700 rounded-md focus:outline-none focus:border-cyan-500"
          />
          
          <button 
            onClick={() => setCurrentScreen("profile")} 
            className="w-full py-2 bg-cyan-500 text-white rounded-md mt-4"
          >
            Send Email
          </button>
        </div>
      </div>
      
      <BottomNavigation setCurrentScreen={setCurrentScreen} currentScreen="" />
    </div>
  );
}

// App Info Screen
function AppInfoScreen({ setCurrentScreen }) {
  return (
    <div className="min-h-screen bg-black flex flex-col">
      <div className="p-4 flex items-center justify-between border-b border-gray-800">
        <button onClick={() => setCurrentScreen("profile")} className="text-cyan-500">
          <ChevronLeft size={24} />
        </button>
        <h1 className="text-lg font-bold">App Info</h1>
        <div className="w-6"></div>
      </div>
      
      <div className="flex-1 p-4">
        <div className="w-32 h-32 mx-auto mb-4">
          <Logo />
        </div>
        
        <div className="text-center mb-6">
          <h2 className="text-xl font-bold">SECURE VISION</h2>
          <p className="text-sm text-gray-400">v1.0.0</p>
          <p className="text-xs text-gray-500 mt-1">Last Updated: May, 2023</p>
        </div>
        
        <div className="space-y-4">
          <div>
            <h3 className="text-sm font-bold mb-1">Description</h3>
            <p className="text-xs text-gray-400">
              SecureVision is an AI-powered security application that monitors your property and sends real-time alerts. With features like motion detection, facial recognition, and more, keep your home safe and secure.
            </p>
          </div>
          
          <div>
            <h3 className="text-sm font-bold mb-1">Developed By</h3>
            <p className="text-xs text-gray-400">
              Group 14 Capstone project, CSE
            </p>
          </div>
          
          <div>
            <h3 className="text-sm font-bold mb-1">Contact Us</h3>
            <p className="text-xs text-gray-400">
              +1 (778) 555-9988
            </p>
          </div>
        </div>
      </div>
      
      <BottomNavigation setCurrentScreen={setCurrentScreen} currentScreen="" />
    </div>
  );
}

// Reusable Components
function Logo() {
  return (
    <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
      <polygon points="50,10 90,30 90,70 50,90 10,70 10,30" fill="#111" stroke="#00A8CC" strokeWidth="2" />
      <polygon points="50,20 80,35 80,65 50,80 20,65 20,35" fill="#111" stroke="#00A8CC" strokeWidth="1" />
      <circle cx="50" cy="50" r="15" fill="#00A8CC" opacity="0.3" />
      <path d="M30,40 L70,60" stroke="#00A8CC" strokeWidth="1" />
      <path d="M30,60 L70,40" stroke="#00A8CC" strokeWidth="1" />
    </svg>
  );
}

function MenuTile({ icon, title, onClick }) {
  return (
    <button 
      onClick={onClick}
      className="flex flex-col items-center justify-center bg-gray-800 rounded-md p-4 transition-colors hover:bg-gray-700"
    >
      <div className="mb-2">{icon}</div>
      <span className="text-sm">{title}</span>
    </button>
  );
}

function BottomNavigation({ setCurrentScreen, currentScreen }) {
  return (
    <div className="flex justify-around items-center p-4 border-t border-gray-800">
      <button 
        onClick={() => setCurrentScreen("home")}
        className={`p-2 ${currentScreen === "home" ? "text-cyan-500" : "text-gray-400"}`}
      >
        <Home size={24} />
      </button>
      <button 
        onClick={() => setCurrentScreen("alertDetails")}
        className={`p-2 ${currentScreen === "alertDetails" ? "text-cyan-500" : "text-gray-400"}`}
      >
        <Bell size={24} />
      </button>
      <button 
        onClick={() => setCurrentScreen("dashboard")}
        className={`p-2 ${currentScreen === "dashboard" ? "text-cyan-500" : "text-gray-400"}`}
      >
        <Camera size={24} />
      </button>
      <button 
        onClick={() => setCurrentScreen("settings")}
        className={`p-2 ${currentScreen === "settings" ? "text-cyan-500" : "text-gray-400"}`}
      >
        <Settings size={24} />
      </button>
      <button 
        onClick={() => setCurrentScreen("profile")}
        className={`p-2 ${currentScreen === "profile" ? "text-cyan-500" : "text-gray-400"}`}
      >
        <User size={24} />
      </button>
    </div>
  );
}